{
    "endpoints":[
        {
            "name":"Account",
            "Synopsis":"<p>Account is a component of a Chart Of Accounts, and is part of a Ledger. Used to record a total monetary amount allocated against a specific use. Accounts are one of five basic types:</p><ul><li>Asset</li><li>Liability</li><li>Revenue (Income)</li><li>Expenses</li><li>Equity</li></ul><br/><h4>Business Rules</h4><br/><p>The Account object has the following business rules and validations:</p><ul><li> The account name must be unique.</li><li> The account name cannot contain a colon (:).</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Account",
                    "HTTPMethod":"POST",
                    "URI":"/account/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Account\">~ATTRIBUTES~</Object></Add>",
					"RequestBodyEntity": "Account",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Account",
                    "HTTPMethod":"POST",
                    "URI":"/account/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Account\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Account",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Account",
                    "HTTPMethod":"GET",
                    "URI":"/account/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Account searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/account/v2/:realmId/:accountId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "accountId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Account using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/account/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml"
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "AccountQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Account",
                "AccountQuery"
            ]
        },
        {
            "name":"Bill",
            "Synopsis":"<p>Bill is an AP transaction representing a request-for-payment from a third party for goods/services rendered and/or received. Bill is a request for payment from the vendor for the goods or services that are rendered. You can enter a bill for your expenses or the items that you track as part of your business. An item is anything that your company buys, sells, or resells in the course of business. For example, products, shipping and handling charges, discounts, and sales tax.</p><p>An expense is the amount of money that you spend on the items that you want to buy. Expenses are linked to expense accounts. For example, if you pay $200 per month for utilities, you can set up an expense account for these utilities, and assign the bill to this account.</p><h4>Business Rules</h4><br/><p>The Bill object has the following business rules and validations:</p><ul><li>If an account is provided in the header of the bill, it must be the Account Payable (AP) account. </li><li> A bill must have reference to a vendor in the header. </li><li> A bill must have at least one line that describes the item or account. </li><li> A bill must have reference to an object.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Bill",
                    "HTTPMethod":"POST",
                    "URI":"/bill/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Bill\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Bill",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Bill",
                    "HTTPMethod":"POST",
                    "URI":"/bill/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Bill\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Bill",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Bill",
                    "HTTPMethod":"GET",
                    "URI":"/bill/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Bill searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/bill/v2/:realmId/:BillID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "BillID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Bill using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/bill/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "BillQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Bill",
                "BillQuery"
            ]
        },
        {
            "name":"BillPayment",
            "Synopsis":"<p>Financial transaction representing a Payment by check issued to pay one or more bills received from 3rd party (vendor) for purchased goods or services.</p><h4>Business Rules</h4><br/><p>The BillPayment object has the following business rules and validations:</p><ul><li> If an account is provided in the header of the bill payment, it must be the Account Payable (AP) account.</li> <li> A bill payment must have reference to a vendor in the header.</li> <li> A bill payment must have reference to an object.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type BillPayment",
                    "HTTPMethod":"POST",
                    "URI":"/billpayment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"BillPayment\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "BillPayment",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type BillPayment",
                    "HTTPMethod":"GET",
                    "URI":"/billpayment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type BillPayment searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/billpayment/v2/:realmId/:BillPaymentID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "BillPaymentID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type BillPayment using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/billpayment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "BillPaymentQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "BillPayment",
                "BillPaymentQuery"
            ]
        },
        {
            "name":"BillPaymentCreditCard",
            "Synopsis":"<p>Financial transaction representing a Payment by credit card issued to pay one or more bills received from 3rd party (vendor) for purchased goods or services. Creates a BillPaymentCreditCard transaction, representing a payment by credit card against a bill issued for goods or services. If using with QuickBooks desktop versions, if you want to pay multiple bills, you must issue a separate request for each bill you want to pay. Also, if you are using more than one A/P account, make sure that the APAccount used in the BillPaymentCreditCard matches the APAccount that was used when the Bill was originally added.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type BillPaymentCreditCard",
                    "HTTPMethod":"POST",
                    "URI":"/billpaymentcreditcard/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"BillPaymentCreditCard\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "BillPaymentCreditCard",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type BillPaymentCreditCard",
                    "HTTPMethod":"GET",
                    "URI":"/billpaymentcreditcard/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type BillPaymentCreditCard searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/billpaymentcreditcard/v2/:realmId/:BillPaymentCreditCardID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "BillPaymentCreditCardID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type BillPaymentCreditCard using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/billpaymentcreditcard/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "BillPaymentCreditCardQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "BillPaymentCreditCard",
                "BillPaymentCreditCardQuery"
            ]
        },
        {
            "name":"BOMComponent",
            "Synopsis":"<p>Describes one component of the BOM (Bill of Materials), an Inventory Assembly Item.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type BOMComponent",
                    "HTTPMethod":"GET",
                    "URI":"/bomcomponent/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type BOMComponent searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/bomcomponent/v2/:realmId/:BomID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "BomID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type BOMComponent using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/bomcomponent/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "BOMComponentQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "BOMComponent",
                "BOMComponentQuery"
            ]
        },
        {
            "name":"BuildAssembly",
            "Synopsis":"<p>Transaction that adds Assembly Items to inventory. The assembly's components (identified by Line/ItemId) are deducted from inventory and the quantity of assembly items (identified by Header/ItemId) is increased accordingly. Note that while the QBSDK returns QuantityOnHand data for the assembly and the components of the assembly, Data Services does NOT. Quantity on hand data can be obtained by looking only at the Item object itself.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type BuildAssembly",
                    "HTTPMethod":"GET",
                    "URI":"/buildassembly/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type BuildAssembly searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/buildassembly/v2/:realmId/:BuildAssemblyID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "BuildAssemblyID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type BuildAssembly using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/buildassembly/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "BuildAssemblyQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "BuildAssembly",
                "BuildAssemblyQuery"
            ]
        },
        {
            "name":"Charge",
            "Synopsis":"<p>Financial transaction representing a request for payment for goods or services that have been sold.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Charge",
                    "HTTPMethod":"GET",
                    "URI":"/charge/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Charge searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/charge/v2/:realmId/:ChargeID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "ChargeID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Charge using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/charge/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "ChargeQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Charge",
                "ChargeQuery"
            ]
        },
        {
            "name":"Check",
            "Synopsis":"<p>Financial transaction representing a payment to a payee. When used together with a realm synchronized with a QuickBooks company, the IDS Check object maps to the QuickBooks Check. Upon synchronization with QuickBooks, the Check Create operation results in a new Check added to the QuickBooks register. The Check Create operation creates a Check similar to what a user might create in the QuickBooks \"Write Checks\" form. The Write Checks form can be reached in the QuickBooks UI by selecting Banking-&gt;Write Checks or by clicking on the Write Checks icon in the Home page.</p><p>In the Check line items, you refer to an item via the ItemName field. That references automatically supplies the base unit of measure (UOM) for the item, and its description. You need only supply the quantity and unit price. At least one line item is required.</p><h4>Business Rules</h4><br/><p>The Check object has the following business rules and validations:</p><ul> <li>A check must have at least one line that describes the item or account.</li> <li>A check must have reference to a vendor in the header.</li> </ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Check",
                    "HTTPMethod":"POST",
                    "URI":"/check/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Check\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Check",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Check",
                    "HTTPMethod":"POST",
                    "URI":"/check/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Check\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Check",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Check",
                    "HTTPMethod":"GET",
                    "URI":"/check/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Check searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/check/v2/:realmId/:CheckID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "CheckID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Check using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/check/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CheckQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Check",
                "CheckQuery"
            ]
        },
        {
            "name":"Class",
            "Synopsis":"<p>Classes provide a way to track different segments of the business, and to break down the income and expenses for each segment. Classes provide a system for categorizing transactions that goes beyond the basic ways of assigning transactions to expense or income accounts. With classes, it is possible to categorize each detail line on a transaction. This allows the customer to write one check to the office supply store for things bought for two different business units and still track the business unit for those purchases.<br>Example uses of classes:</p><ul><li>Department</li><li>Enterprise</li><li>Properties</li><li>Work categories (plumbing, electrical, etc.)</li><li>Manufacturers</li><li>Partners</li><li>Product Lines</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Class",
                    "HTTPMethod":"POST",
                    "URI":"/class/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Class\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Class",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Class",
                    "HTTPMethod":"GET",
                    "URI":"/class/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Class searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/class/v2/:realmId/:ClassID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "ClassID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Class using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/class/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "ClassQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Class",
                "ClassQuery"
            ]
        },
        {
            "name":"Company",
            "Synopsis":"<p>A company represents the organization through which you offer services or products to the customers. The CompanyMetaData object contains your company information, such as the name, address, and web site address of your company. You must create a company file before you set up your financial records.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Company",
                    "HTTPMethod":"POST",
                    "URI":"/company/v2/create",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml"
                        },
                        {
                            "Name": "Authorization",
                            "Default": "INTUITAUTH intuit-app-token=\"Application Token assigned to Intuit App Center application\""
                        },
                        {
                            "Name": "Cookie",
                            "Default": "TICKET=<Intuit login Ticket>; qbn.ticket=<QBN Ticket>; qbn.tkt=<QBN tkt>; qbn.authid=<QBN Auth ID>; qbn.gauthid=<QBN G Auth ID>; qbn.agentid=<QBN Agent ID>; iamValidationTime=<time stamp>"
                        }
                    ],
                    "parameters":[
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"CompanyRequest\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "CompanyRequest",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Company",
                    "HTTPMethod":"POST",
                    "URI":"/company/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml"
                        },
                        {
                            "Name": "Authorization",
                            "Default": "INTUITAUTH intuit-app-token=\"Application Token assigned to Intuit App Center application\""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"CompanyRequest\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "CompanyRequest",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve a company",
                    "Synopsis":"This operation retrieve a company",
                    "HTTPMethod":"GET",
                    "URI":"/company/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve a List of Companies",
                    "Synopsis":"<p>Company information may belong to the Intuit domain without belonging to the Data Services domain, because a company may have been created for an application without a Data Services association. The company/v2/availablelist API retrieves both the Data Services and non-Data Services companies that are associated with the user identity.&nbsp; To determine if a company is non-Data Services, check the following elements in the response:</p><ul> <li>DefinitionId: DoNotUse</li> <li>Name: RealmStatus</li> <li>Value: NonIDS</li></ul>",
                    "HTTPMethod":"GET",
                    "URI":"/company/v2/availableList",
                    "RequiresOAuth":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml"
                        },
                        {
                            "Name": "Authorization",
                            "Default": "INTUITAUTH intuit-app-token=\"Application Token assigned to Intuit App Center application\""
                        },
                        {
                            "Name": "Cookie",
                            "Default": "TICKET=<Intuit login Ticket>; qbn.ticket=<QBN Ticket>; qbn.tkt=<QBN tkt>; qbn.authid=<QBN Auth ID>; qbn.gauthid=<QBN G Auth ID>; qbn.agentid=<QBN Agent ID>; iamValidationTime=<time stamp>"
                        }
                    ],
                    "parameters":[

                    ]
                }
            ],
            "EntityNames":[
                "CompanyRequest"
            ]
        },
        {
            "name":"CreditCardCharge",
            "Synopsis":"<p>Financial transaction representing a charge for purchase of goods or services. The CreditCardCharge represents an expense to the business as a credit card charge transaction. The expense is of the following types: </p><ul><li> Item based expense for the item that is purchased for reselling. </li><li> Account based expense for the amount spend on an account, such as expense incurred on \"advertisement expense\" account.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type CreditCardCharge",
                    "HTTPMethod":"POST",
                    "URI":"/creditcardcharge/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"CreditCardCharge\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "CreditCardCharge",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type CreditCardCharge",
                    "HTTPMethod":"POST",
                    "URI":"/creditcardcharge/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"CreditCardCharge\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "CreditCardCharge",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type CreditCardCharge",
                    "HTTPMethod":"GET",
                    "URI":"/creditcardcharge/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type CreditCardCharge searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/creditcardcharge/v2/:CreditCardChargeID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "CreditCardChargeID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type CreditCardCharge using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/creditcardcharge/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CreditCardChargeQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "CreditCardCharge",
                "CreditCardChargeQuery"
            ]

        },
        {
            "name":"CreditCardCredit",
            "Synopsis":"<p>Financial transaction representing a credit for purchase of goods or services.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type CreditCardCredit",
                    "HTTPMethod":"POST",
                    "URI":"/creditcardcredit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"CreditCardCredit\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "CreditCardCredit",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type CreditCardCredit",
                    "HTTPMethod":"POST",
                    "URI":"/creditcardcredit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"CreditCardCredit\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "CreditCardCredit",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type CreditCardCredit",
                    "HTTPMethod":"GET",
                    "URI":"/creditcardcredit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type CreditCardCredit searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/cred/v2/:CreditCardCreditID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "CreditCardCreditID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type CreditCardCredit using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/creditcardcredit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CreditCardCreditQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "CreditCardCredit",
                "CreditCardCreditQuery"
            ]
        },
        {
            "name":"CreditCardRefund",
            "Synopsis":"<p>The CreditCardRefund object helps you to refund a sale transaction that involves the credit card of a customer. You can use this object to refund transactions such as invoice, sales receipt, and statement charge.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type CreditCardRefund",
                    "HTTPMethod":"GET",
                    "URI":"/creditcardrefund/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CreditCardRefund",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type CreditCardRefund searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/creditcardrefund/v2/:realmId/:CreditCardRefundID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "CreditCardRefundID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type CreditCardRefund using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/creditcardrefund/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CreditCardRefundQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "CreditCardRefund",
                "CreditCardRefundQuery"
            ]
        },
        {
            "name":"CreditMemo",
            "Synopsis":"<p>Financial transaction representing a refund (or credit) of payment or part of a payment for goods or services that have been sold.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type CreditMemo",
                    "HTTPMethod":"POST",
                    "URI":"/creditmemo/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"CreditMemo\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "CreditMemo",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type CreditMemo",
                    "HTTPMethod":"GET",
                    "URI":"/creditmemo/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type CreditMemo searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/creditmemo/v2/:realmId/:CreditMemoID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "CreditMemoID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type CreditMemo using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/creditmemo/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CreditMemoQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "CreditMemo",
                "CreditMemoQuery"
            ]
        },
        {
            "name":"CurrencyInfo",
            "Synopsis":"<p>The currency object contains all of the information needed to display and use a foreign currency. For built-in currencies, the name and currency code values are internationally accepted values and thus are not editable. The comma format is editable, as is the IsActive status. For user-defined currencies, every value in the object is editable including name and currency code.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type CurrencyInfo",
                    "HTTPMethod":"GET",
                    "URI":"/currencyinfo/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type CurrencyInfo searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/currencyinfo/v2/:realmId/:CurrencyID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "CurrencyID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type CurrencyInfo using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/currencyinfo/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CurrencyInfoQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "CurrencyInfo",
                "CurrencyInfoQuery"
            ]
        },
        {
            "name":"Customer",
            "Synopsis": "<p>A customer is a consumer of the service or product that your business offers. The Customer object allows you to categorize customers according to your business requirements. For example, you can create a category of customers to indicate the industry that a customer represents, the geographic location of a customer, or the awareness of the business. Categorization of customers is useful for reports. While creating a customer, avoid entering any job data. If you enter a job data, the system can prevent you from adding any more jobs for that customer. You must first create a customer, and then create a job using that customer as a parent.</p><h4>Business Rules</h4><br/><p>The Customer object has the following business rules and validations:</p><ul><li>The customer name must be unique.</li><li>The customer name must not contain a colon (:).</li><li>The e-mail address of the customer must contain @ and . (dot).</li><li>The customer address field is mandatory.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Customer",
                    "HTTPMethod":"POST",
                    "URI":"/customer/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Customer\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Customer",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Customer",
                    "HTTPMethod":"POST",
                    "URI":"/customer/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Customer\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Customer",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Customer",
                    "HTTPMethod":"GET",
                    "URI":"/customer/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Customer searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/customer/v2/:realmId/:CustomerID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "CustomerID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Customer using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/customer/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CustomerQuery",
                    "RequestBodyExcludeElements": []
                }

            ],
            "EntityNames":[
                "Customer",
                "CustomerQuery"
            ]
        },
        {
            "name":"CustomerMsg",
            "Synopsis":"<p>A standard message to a customer that can be included at the bottom of a sales form. A customer message or a customer message list appears at the bottom of a sales form. For example, you can create a thank you message using the CustomerMsg, and include this message in any invoice.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type CustomerMsg",
                    "HTTPMethod":"GET",
                    "URI":"/customermsg/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type CustomerMsg searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/customermsg/v2/:realmId/:CustomerMsgID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "CustomerMsgID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type CustomerMsg using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/customermsg/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CustomerMsgQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "CustomerMsg",
                "CustomerMsgQuery"
            ]
        },
        {
            "name":"CustomerType",
            "Synopsis":"<p>Customer types allow categorizing customers in ways that are meaningful to the business. For example, one could set up customer types so that they indicate which industry a customer represents, a customer's geographic location, or how a customer first heard about the business. The categorization then can be used for reporting or mailings.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type CustomerType",
                    "HTTPMethod":"GET",
                    "URI":"/customertype/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type CustomerType searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/customertype/v2/:realmId/:CustomerTypeID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "CustomerTypeID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type CustomerType using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/customertype/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "CustomerTypeQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "CustomerType",
                "CustomerTypeQuery"
            ]
        },
        {
            "name":"Deposit",
            "Synopsis":"<p>Transaction recording the transfer of money from the Undeposited Funds account to the Bank account.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Deposit",
                    "HTTPMethod":"GET",
                    "URI":"/deposit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Deposit searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/deposit/v2/:DepositID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "DepositID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Deposit using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/deposit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "DepositQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Deposit",
                "DepositQuery"
            ]
        },
        {
            "name":"Discount",
            "Synopsis":"<p>Identifies the discount or allowance that the Customer is to receive off of the TotalAmount owed.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Discount",
                    "HTTPMethod":"POST",
                    "URI":"/discount/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Discount\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Discount",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Discount",
                    "HTTPMethod":"POST",
                    "URI":"/discount/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Discount\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Discount",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Discount",
                    "HTTPMethod":"GET",
                    "URI":"/discount/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Discount searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/discount/v2/:realmId/:DiscountID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "DiscountID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Discount using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/discount/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "DiscountQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Discount",
                "DiscountQuery"
            ]
        },
        {
            "name":"Employee",
            "Synopsis":"<p>The Employee represents the persons who are working for the company.</p><h4>Business Rules</h4><br/><p>The Employee object has the following business rules and validations:</p><ul><li>The employee name must be unique.</li><li>The employee name, first name, or last name must not contain a colon (:).</li><li>The name, first name or last name field should not be blank.</li><li>The e-mail, phone, and address fields are mandatory.</li><li>The e-mail address of the employee must contain @ and . (dot).</li><li>The value for the EmployeeType element must be either of the following: Officer, Owner, Regular, or Statutory.</li><li>The value for the DeviceType element must be either of the following: Landline, Mobile, Fax, or Pager.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Employee",
                    "HTTPMethod":"POST",
                    "URI":"/employee/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Employee\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Employee",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Employee",
                    "HTTPMethod":"POST",
                    "URI":"/employee/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Employee\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Employee",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Employee",
                    "HTTPMethod":"GET",
                    "URI":"/employee/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Employee searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/employee/v2/:realmId/:EmployeeID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "EmployeeID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Employee using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/employee/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "EmployeeQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Employee",
                "EmployeeQuery"
            ]

        },
        {
            "name":"Estimate",
            "Synopsis":"<p>An estimate is a description of a sale that you propose to a current or prospective customer. An estimate contains a list of tasks that you can perform for, or products that you can provide to customers. An estimate is also called a bid or proposal. An estimate is a non-posting transaction that does not affect the balance sheet or income statement of a company.</p><h4>Business Rules</h4><br/><p>The Estimate object has the following business rules and validations:</p><ul><li> An estimate must have at least one line that describes an item.</li> <li> An estimate must have a reference to a customer in the header.</li> <li> If you submit a query with the filter IncludeDiscountLineDetails, the system retrieves either DiscountAmount or DiscountRatePercent with associated values</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Estimate",
                    "HTTPMethod":"POST",
                    "URI":"/estimate/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Estimate\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Estimate",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Estimate",
                    "HTTPMethod":"POST",
                    "URI":"/estimate/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Estimate\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Estimate",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Estimate",
                    "HTTPMethod":"GET",
                    "URI":"/estimate/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Estimate searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/estimate/v2/:realmId/:EstimateID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "EstimateID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Estimate using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/estimate/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "EstimateQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Estimate",
                "EstimateQuery"
            ]
        },
        {
            "name":"FixedAsset",
            "Synopsis":"<p>Fixed assets represent the business assets that you do not convert to cash within one year of operation. A fixed asset is usually integral to your business operations. For example, a truck, cash register, or computer.</p><h4>Business Rules</h4><br/><p>The FixedAsset object has the following business rules and validations:</p><ul><li>If ItemID or ItemType are specified for a transaction, do not specify UnitPrice for the fixed asset.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type FixedAsset",
                    "HTTPMethod":"POST",
                    "URI":"/fixedasset/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"FixedAsset\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "FixedAsset",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type FixedAsset",
                    "HTTPMethod":"GET",
                    "URI":"/fixedasset/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type FixedAsset searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/fixedasset/v2/:realmId/:FixedAssetID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "FixedAssetID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type FixedAsset using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/fixedasset/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "FixedAssetQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "FixedAsset",
                "FixedAssetQuery"
            ]
        },
        {
            "name":"InventoryAdjustment",
            "Synopsis":"<p>Financial transaction representing quantity or value adjustments of inventory items that either increase or decrease inventory for the specified items.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type InventoryAdjustment",
                    "HTTPMethod":"GET",
                    "URI":"/inventoryadjustment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type InventoryAdjustment searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/inventoryadjustment/v2/:realmId/:InventoryAdjustmentID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "InventoryAdjustmentID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type InventoryAdjustment using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/inventoryadjustment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "InventoryAdjustmentQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "InventoryAdjustment",
                "InventoryAdjustmentQuery"
            ]
        },
        {
            "name":"InventorySite",
            "Synopsis":"<p>The InventorySite resource represents a location where inventory is stored.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type InventorySite",
                    "HTTPMethod":"GET",
                    "URI":"/inventorysite/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type InventorySite searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/inventorysite/v2/:InventorySiteID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "InventorySiteID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Inventorysite using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/inventorysite/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "InventorySiteQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "InventorySite",
                "InventorySiteQuery"
            ]
        },
        {
            "name":"InventoryTransfer",
            "Synopsis":"<p>Transaction reflecting the movement of inventory assets between inventory sites.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type InventoryTransfer",
                    "HTTPMethod":"GET",
                    "URI":"/inventorytransfer/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type InventoryTransfer searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/inventorytransfer/v2/:InventoryTransferID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "InventoryTransferID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type InventoryTransfer using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/inventorytransfer/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "InventoryTransferQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "InventoryTransfer",
                "InventoryTransferQuery"
            ]
        },
        {
            "name":"Invoice",
            "Synopsis":"<p>Financial transaction representing a request for payment for goods or services that have been sold. An invoice is a form that records the details of a customer's purchase, such as quantity and price of the goods or services. An invoice records the amount owed by a customer who does not pay in full at the time of purchase. If full payment is received at the time of purchase, the sale may be recorded as a sales receipt, not an invoice. See <a href=\"https://ipp.developer.intuit.com/0010_Intuit_Partner_Platform/0050_Data_Services/0500_QuickBooks_Windows/0600_Object_Reference/SalesReceipt\" rel=\"internal\" title=\"0010_Intuit_Partner_Platform/0050_Data_Services/0500_QuickBooks_Windows/0600_Object_Reference/SalesReceipt\">SalesReceipt</a>.</p><p> Note: You can now make Payments for Invoices that you created in Data Services and simultaneously synchronize them back to QuickBooks.</p><p> An invoice for QuickBooks must contain a valid customer reference in the CustomerId field and at least one line item. The referenced customer must already exist in the QuickBooks company at the desktop and any line items must also already exists in the QuickBooks company, or the attempt to sync will fail.</p><p> In general, it is a good practice to specify all the QuickBooks header fields if you have the data. You should always specify the ARAccountId; otherwise a default AR account will be used and this may give you unexpected results. If you want to apply one tax to all the transaction line items, use the TaxId or TaxGroupId field. If you want to use more than one tax, you need to use Tax Line items instead.</p><h4>Business Rules</h4><br/><p>The Invoice object has the following business rules and validations:</p><ul> <li>An invoice must have at least one line that describes the item.</li> <li>If an account is specified in the header, the account must be of the Accounts Receivable (AR) type.</li> <li>An invoice must have a reference to a customer in the header.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Invoice",
                    "HTTPMethod":"POST",
                    "URI":"/invoice/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Invoice\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Invoice",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Invoice",
                    "HTTPMethod":"POST",
                    "URI":"/invoice/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Invoice\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Invoice",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Invoice",
                    "HTTPMethod":"GET",
                    "URI":"/invoice/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Invoice searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/invoice/v2/:realmId/:InvoiceID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "InvoiceID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Invoice using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/invoice/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "InvoiceQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Invoice",
                "InvoiceQuery"
            ]
        },
        {
            "name":"Item",
            "Synopsis":"<p>An item is a thing that your company buys, sells, or re-sells, such as products, shipping and handling charges, discounts, and sales tax (if applicable). An item is shown as a line on an invoice or other sales form. An item helps you to fill the line item area of the sales or purchase form quickly. When you select an item from the item list, QuickBooks fills in a description of the line item and calculates the amount for you. An item is of the following types: </p><ul><li>Assembly Item: The Assembly item allows you combine inventory part items and other assembly items (subassemblies) into a single item by defining a Bill of Materials, that lists the component parts of the assembly item. You can also include the cost of building the assembly item by adding the non-inventory part items, service items, and other charge items to the Bill of Materials. </li><li> Fixed Asset Item: The Fixed Asset item represents those business assets that you do not convert to cash one year of normal operation. A fixed asset is usually something that is integral to your business operations. For example, a truck or computer. </li><li>Group Item: The Group item helps you to quickly enter a group of individual items that you often purchase or sell together. </li><li>Inventory Item: The Inventory item is used to track merchandise which your business purchases, stocks as inventory, and re-sells. QuickBooks tracks the current number of inventory items in stock and the average value of the inventory after the purchase and sale of every item. </li><li>Other Charge Item: The Other Charge item is used to charge customers for the mileage expense.</li> <li>Product Item: The Product item is used to record the sales information of a product. </li><li>Payment Item: The Payment item subtracts the amount of a customer payment from the total amount of an invoice or statement. You must create a payment item if you receive payment for an invoice or statement in parts. If you receive full payment at the time of sale, use a sales receipt form instead of an invoice with a payment item.</li> <li>Service Item: The Service item is used for the services that you charge on the purchase. For example, including specialized labor, consulting hours, and professional fees. </li><li>Subtotal Item: The Subtotal item is used when you want the total of all the items. You can use this item to apply a percentage discount or surcharge.</li></ul><h4>Business Rules</h4><br/><p>The Item object has the following business rules and validations:</p><ul><li>The item name must be unique. </li><li>The item type must not be NULL. </li><li>The item cannot define both unit price and unit price percent simultaneously. </li><li>For the Service, Product, and Other Charge items, you must specify the ID or name of the expense account or both. </li><li>If the purchase order cost is specified for the Service, Product, and Other Charge items, you must specify the ID or name of the expense account or both.</li> For the Inventory and Assembly items, you must specify: <li>the ID or name of the income account or both </li><li>the ID or name of the cogs account or both </li><li>the ID or name of the asset account or both </li><li>For the Group item, you must specify the tax ID or tax name or both.</li> For the Fixed Asset item, you must: <li>set the asset account type to Asset</li> <li>specify the purchase date </li><li>specify the ID or name of the income account or both</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Item",
                    "HTTPMethod":"POST",
                    "URI":"/item/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Item\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Item",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Item",
                    "HTTPMethod":"POST",
                    "URI":"/item/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Item\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Item",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Item",
                    "HTTPMethod":"GET",
                    "URI":"/item/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Item searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/item/v2/:realmId/:ItemID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "ItemID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Item using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/item/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "ItemQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Item",
                "ItemQuery"
            ]
        },
        {
            "name":"ItemConsolidated",
            "Synopsis":"<p>ItemConsolidated provides efficient parity between QuickBooks and applications that depend on the Data Services Item types that are synchronized with the QuickBooks Item type. This object allows collaboration of the following objects: </p><ul><li>Item </li><li>Discount </li><li>FixedAssets </li><li>SalesTax </li><li>SalesTaxGroup.</li></ul>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type ItemConsolidated",
                    "HTTPMethod":"GET",
                    "URI":"/itemconsolidated/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type ItemConsolidated using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/itemconsolidated/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "ItemConsolidatedQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "ItemConsolidated",
                "ItemConsolidatedQuery"
            ]
        },
        {
            "name":"ItemGroupComponent",
            "Synopsis":"<p>Describes one line of the Item Group.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type ItemGroupComponent",
                    "HTTPMethod":"GET",
                    "URI":"/itemgroupcomponent/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type ItemGroupComponent searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/itemgroupcomponent/v2/:realmId/:ItemGroupComponentID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "ItemGroupComponentID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type ItemGroupComponent using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/itemgroupcomponent/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "ItemGroupComponentQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "ItemGroupComponent",
                "ItemGroupComponentQuery"
            ]
        },
        {
            "name":"ItemReceipt",
            "Synopsis":"<p>ItemReceipt is an AP transaction representing the delivery of goods from a 3rd party. The Bill is expected to be received at a later date. You can use the ItemReceipt object to manage your Account Receivable transactions with third party vendors.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type ItemReceipt",
                    "HTTPMethod":"POST",
                    "URI":"/itemreceipt/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"ItemReceipt\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "ItemReceipt",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type ItemReceipt",
                    "HTTPMethod":"POST",
                    "URI":"/itemreceipt/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"ItemReceipt\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "ItemReceipt",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type ItemReceipt",
                    "HTTPMethod":"GET",
                    "URI":"/itemreceipt/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type ItemReceipt searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/itemreceipt/v2/:realmId/:ItemReceiptID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "ItemReceiptID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type ItemReceipt using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/itemreceipt/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "ItemReceiptQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "ItemReceipt",
                "ItemReceiptQuery"
            ]
        },
        {
            "name":"Job",
            "Synopsis":"<p>A job can be defined as a project, policy (insurance), or case (legal) according to your business. The Job object is a way to track larger orders, such as order placed by different departments within the same organization. You can use job types to track important information about your projects and jobs. Tracking the job types gives you an idea of the profitability of each job that you do. Tracking can also help you to determine the time that you spent on different types of projects or jobs. You can filter any project report based on the job type.</p><h4>Business Rules</h4><br/><p>The Job object has the following business rules and validations:</p><ul><li>The job name must be unique. </li><li>The job name must not contain a colon (:). </li><li>Each job must have a valid customer ID or customer name reference.</li> <li>The job parent ID or job parent name must be valid.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Job",
                    "HTTPMethod":"POST",
                    "URI":"/job/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Job\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Job",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Job",
                    "HTTPMethod":"POST",
                    "URI":"/job/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Job\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Job",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Job",
                    "HTTPMethod":"GET",
                    "URI":"/job/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type job searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/job/v2/:realmId/:JobID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "JobID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Job using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/job/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "JobQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Job",
                "JobQuery"
            ]
        },
        {
            "name":"JobType",
            "Synopsis":"<p>Job types allow categorizing jobs so that similar jobs can be grouped and subtotaled on reports. Ultimately, they will help in determining which jobs are most profitable for the business.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type JobType",
                    "HTTPMethod":"GET",
                    "URI":"/jobtype/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type JobType searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/jobtype/v2/:realmId/:JobTypeID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "JobTypeID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type JobType using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/jobtype/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "JobTypeQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "JobType",
                "JobTypeQuery"
            ]
        },
        {
            "name":"JournalEntry",
            "Synopsis":"<p>Adds a Journal Entry. In traditional accounting, transactions are entered into the general journal and categorized exclusively by account. In QuickBooks, most transactions can be categorized either by account or by type (invoice, check, and so on). For a few activities in QuickBooks, you must use the general journal directly, for example for recording depreciation. Notice that you must supply the credit line and a corresponding debit line in the same request. It will not work to supply them in two distinct requests. You can supply as many credit lines and debit lines in one single request as you want so long as the total monetary amount from the credits equals the total monetary amount from the debits in that request. DO NOT supply negative sign for the monetary amounts.</p><h4>Business Rules</h4><br/><ul> <li>The Line/PostingType attribute (either Credit or Debit) is required.</li> <li>The Line/Amount attribute may not be negative.</li> <li>Each request must have debits and credits.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type JournalEntry",
                    "HTTPMethod":"POST",
                    "URI":"/journalentry/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"JournalEntry\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "JournalEntry",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type JournalEntry",
                    "HTTPMethod":"POST",
                    "URI":"/journalentry/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"JournalEntry\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "JournalEntry",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type JournalEntry",
                    "HTTPMethod":"GET",
                    "URI":"/journalentry/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type JournalEntry searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/journalentry/v2/:realmId/:JournalEntryID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "JournalEntryID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type JournalEntry using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/journalentry/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "JournalEntryQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "JournalEntry",
                "JournalEntryQuery"
            ]
        },
        {
            "name":"NameValue",
            "Synopsis":"<p>A name/value pair allows for clients including data that is meaningful in the domain of origin, outside of the Intuit domain.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type NameValue",
                    "HTTPMethod":"GET",
                    "URI":"/namevalue/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type NameValue using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/namevalue/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "NameValueQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "NameValue",
                "NameValueQuery"
            ]
        },
        {
            "name":"OtherName",
            "Synopsis":"<p>The OtherName object represents a person or a company that is not your customer, vendor, or employee. For example, you can use OtherName object to represent owners or partners.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type OtherName",
                    "HTTPMethod":"GET",
                    "URI":"/othername/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type OtherName searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/othername/v2/:realmId/:OtherNameID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "OtherNameID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type OtherName using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/othername/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "OtherNameQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "OtherName",
                "OtherNameQuery"
            ]
        },
        {
            "name":"Payment",
            "Synopsis":"<p>Payment is a financial transaction, in which a customer pays for the goods and services purchased. You can make Payments for Invoices that you created in Data Service and simultaneously synchronize them back to QuickBooks.</p><h4>Business Rules</h4><br/><p>The Payment object has the following business rules and validations:</p><ul><li>If an account is specified in the header, the account must be of the Accounts Receivable (AR) type.</li> <li>A payment must have a reference to a customer in the header</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Payment",
                    "HTTPMethod":"POST",
                    "URI":"/payment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Payment\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Payment",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Payment",
                    "HTTPMethod":"POST",
                    "URI":"/payment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Payment\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Payment",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Payment",
                    "HTTPMethod":"GET",
                    "URI":"/payment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Payment searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/payment/v2/:realmId/:PaymentID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "PaymentID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Payment using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/payment/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "PaymentQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Payment",
                "PaymentQuery"
            ]
        },
        {
            "name":"PaymentMethod",
            "Synopsis":"<p>Payment methods provide information about the various ways through which a customer can make payment.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type PaymentMethod",
                    "HTTPMethod":"POST",
                    "URI":"/paymentmethod/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":"Output format as JSON or XML",
                            "EnumeratedList":[
                                "text/json",
                                "text/xml"
                            ]
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"PaymentMethod\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "PaymentMethod",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type PaymentMethod",
                    "HTTPMethod":"GET",
                    "URI":"/paymentmethod/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type PaymentMethod searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/paymentmethod/v2/:realmId/:PaymentMethodID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "PaymentMethodID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type PaymentMethod using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/paymentmethod/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "PaymentMethodQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "PaymentMethod",
                "PaymentMethodQuery"
            ]
        },
        {
            "name":"PayrollItem",
            "Synopsis":"<p>A payroll item (wage-based) is used to track individual amounts on a paycheck for wage, salary, commission, or bonus. You can assign these payroll items to various accounts. For non-wage based payroll items, such as taxes, saving plan (401K) contributions, or direct-deposit amounts, see <a href=\"https://ipp.developer.intuit.com/0010_Intuit_Partner_Platform/0050_Data_Services/0500_QuickBooks_Windows/0600_Object_Reference/PayrollNonWageItem\">PayrollNonWageItem</a>.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type PayrollItem",
                    "HTTPMethod":"GET",
                    "URI":"/payrollitem/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type PayrollItem searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/payrollitem/v2/:realmId/:PayrollItemID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "PayrollItemID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type PayrollItem using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/payrollitem/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "PayrollItemQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "PayrollItem",
                "PayrollItemQuery"
            ]
        },
        {
            "name":"PayrollNonWageItem",
            "Synopsis":"<p>A non-wage payroll item is used to track individual amounts on a paycheck for taxes, saving plan (401K) contributions, direct-deposit amounts - items other than wage, salary, commission, or bonus. You can assign these payroll items to various accounts. For wage-based payroll items, see <a href=\"https://ipp.developer.intuit.com/0010_Intuit_Partner_Platform/0050_Data_Services/0500_QuickBooks_Windows/0600_Object_Reference/PayrollItem\">PayrollItem</a>.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type PayrollNonWageItem",
                    "HTTPMethod":"GET",
                    "URI":"/payrollnonwageitem/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type PayrollNonWageItem searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/payrollnonwageitem/v2/:PayrollNonWageItemID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "PayrollNonWageItemID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type PayrollNonWageItem using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/payrollnonwageitem/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "PayrollNonWageItemQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "PayrollNonWageItem",
                "PayrollNonWageItemQuery"
            ]
        },
        {
            "name":"Preferences",
            "Synopsis":"<p>The Preferences entity contains settings for company-wide preferences, which affect all users.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Preferences",
                    "HTTPMethod":"GET",
                    "URI":"/preference/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                }
            ],
            "EntityNames":[
                "CompanyPreferences"
            ]
        },
        {
            "name":"PurchaseOrder",
            "Synopsis":"<p>PurchaseOrder is a non-posting transaction representing a request to purchase goods or services from a third party. You can use ItemReceipt Create to receive items against a purchase order as items arrive from the vendor. A purchase order is a non-posting transaction, so it does not affect a company's balance sheet or income statement.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type PurchaseOrder",
                    "HTTPMethod":"POST",
                    "URI":"/purchaseorder/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"PurchaseOrder\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "PurchaseOrder",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type PurchaseOrder",
                    "HTTPMethod":"POST",
                    "URI":"/purchaseorder/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"PurchaseOrder\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "PurchaseOrder",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type PurchaseOrder",
                    "HTTPMethod":"GET",
                    "URI":"/purchaseorder/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type PurchaseOrder searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/purchaseorder/v2/:realmId/:PurchaseOrderID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "PurchaseOrderID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type PurchaseOrder using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/purchaseorder/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "PurchaseOrderQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "PurchaseOrder",
                "PurchaseOrderQuery"
            ]
        },
        {
            "name":"SalesOrder",
            "Synopsis":"<p>A sales order is a financial transaction that represents a request received from a customer to purchase products or services. Sales orders help you manage the sale of products and services your customers order. For example, a sales order tracks inventory that is on back order for a customer. Sales Orders are supported only in QuickBooks Premier (desktop) and above. However, if you are accessing a company file created in Premier and above from a lesser edition of QuickBooks (such as Pro), you can do queries against SalesOrders. Using sales orders is optional.</p><h4>Business Rules</h4><br/><p>The SalesOrder object has the following business rules and validations:</p><ul><li>A sales order must have at least one line that describes the item. </li><li>A sales order must have a reference to a customer in the header. </li><li>If you submit a query with the filter IncludeDiscountLineDetails, the system retrieves either DiscountAmount or DiscountRatePercent with associated values</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type SalesOrder",
                    "HTTPMethod":"POST",
                    "URI":"/salesorder/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"SalesOrder\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "SalesOrder",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type SalesOrder",
                    "HTTPMethod":"POST",
                    "URI":"/salesorder/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"SalesOrder\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "SalesOrder",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type SalesOrder",
                    "HTTPMethod":"GET",
                    "URI":"/salesorder/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type SalesOrder searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/salesorder/v2/:realmId/:SalesOrderID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "SalesOrderID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type SalesOrder using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/salesorder/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "SalesOrderQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "SalesOrder",
                "SalesOrderQuery"
            ]
        },
        {
            "name":"SalesReceipt",
            "Synopsis":"<p>A sales receipt is a financial transaction that represents the sale of goods or services where payment in full is received at the time of purchase. Do not use a sales receipt if customers pay in part at the time of purchase; instead, use an invoice. The <a href=\"https://ipp.developer.intuit.com/0010_Intuit_Partner_Platform/0050_Data_Services/0500_QuickBooks_Windows/0600_Object_Reference/Invoice\">Invoice</a> object offers more options than the SalesReceipt, and because a customer name is required for an invoice but not a sales receipt, use the Invoice object to keep track of payments owed on a purchase.</p><h4>Business Rules</h4><p>The SalesReceipt object has the following business rules and validations:</p><ul><li>A sales receipt must have at least one line that describes the item. </li><li>A sales receipt must have a reference to a customer in the header. </li><li>If an account is specified in the header, the account must be of the Accounts Receivable (AR) type.</li> <li>If you submit a query with the filter IncludeDiscountLineDetails, the system retrieves either DiscountAmount or DiscountRatePercent with associated values. </li></ul><p> Note: The PONumber field in a sales receipt is removed after synchronization, as QBSDK does not support it.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type SalesReceipt",
                    "HTTPMethod":"POST",
                    "URI":"/salesreceipt/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"SalesReceipt\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "SalesReceipt",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type SalesReceipt",
                    "HTTPMethod":"POST",
                    "URI":"/salesreceipt/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"SalesReceipt\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "SalesReceipt",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type SalesReceipt",
                    "HTTPMethod":"GET",
                    "URI":"/salesreceipt/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type SalesReceipt searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/salesreceipt/v2/:realmId/:SalesReceiptID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "SalesReceiptID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type SalesReceipt using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/salesreceipt/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "SalesReceiptQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "SalesReceipt",
                "SalesReceiptQuery"
            ]
        },
        {
            "name":"SalesRep",
            "Synopsis":"<p>The SalesRep object allows you to identify sales representatives and track their transactions. A sales representative can be an employee, a vendor, or an independent contractor. You can associate sales representatives with sales deals to track their transactions.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type SalesRep",
                    "HTTPMethod":"GET",
                    "URI":"/salesrep/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type SalesRep searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/salesrep/v2/:realmId/:SalesRepID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "SalesRepID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type SalesRep using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/salesrep/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "SalesRepQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "SalesRep",
                "SalesRepQuery"
            ]
        },
        {
            "name":"SalesTax",
            "Synopsis":"<p>You can use the SalesTax object to manage the sales tax that you collect on behalf of the state or any other government agency, after completing a sales transaction.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type SalesTax",
                    "HTTPMethod":"POST",
                    "URI":"/salestax/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"SalesTax\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "SalesTax",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type SalesTax",
                    "HTTPMethod":"GET",
                    "URI":"/salestax/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type SalesTax searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/salestax/v2/:realmId/:SalesTaxID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "SalesTaxID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type SalesTax using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/salestax/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "SalesTaxQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "SalesTax",
                "SalesTaxQuery"
            ]
        },
        {
            "name":"SalesTaxCode",
            "Synopsis":"<p>A sales tax code is used to track the taxable or non-taxable status of products, services, and customers. You can assign a sales tax code to each of your products, services, and customers based on their taxable or non-taxable status. You can then use these codes to generate reports that provide information to the tax agencies about the taxable or non-taxable status of certain sales.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type SalesTaxCode",
                    "HTTPMethod":"GET",
                    "URI":"/salestaxcode/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type SalesTaxCode searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/salestaxcode/v2/:realmId/:SalesTaxCodeID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "SalesTaxCodeID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type SalesTaxCode using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/salestaxcode/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "SalesTaxCodeQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "SalesTaxCode",
                "SalesTaxCodeQuery"
            ]
        },
        {
            "name":"SalesTaxGroup",
            "Synopsis":"<p>Collection of Sales taxes which the business must collect on behalf of one or more state or government agencies when a sales transaction is completed.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type SalesTaxGroup",
                    "HTTPMethod":"GET",
                    "URI":"/salestaxgroup/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type SalesTaxGroup searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/salestaxgroup/v2/:realmId/:SalesTaxGroupID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "SalesTaxGroupID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type SalesTaxGroup using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/salestaxgroup/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "SalesTaxGroupQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "SalesTaxGroup",
                "SalesTaxGroupQuery"
            ]
        },
        {
            "name":"SalesTerm",
            "Synopsis":"<p>The SalesTerm object represents the terms under which a sale is made, typically expressed in the form of days due after the goods are received. There is an optional discount part of the sales term, where a discount of total amount can automatically be applied if payment is made within the stipulated time.</p><p>For example, net 30 indicates that you must make the payment within 30 days; 2%/15 net 60 indicates that you must make the payment within 60 days, and you can get a discount of 2% if you make payment within 15 days. SalesTerm also supports the ability to specify the absolute due date, a number of days from a start date, a percent discount, or an absolute discount.</p><p>The SalesTerm name itself is a text-only attribute and the desired application of the sales term must be coded. For example, a common term such as Net30Days is explicitly coded as a calculated DueDateTime or as a PaymentTermsDateTime and NumberOfDays.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type SalesTerm",
                    "HTTPMethod":"POST",
                    "URI":"/term/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"SalesTerm\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "SalesTerm",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type SalesTerm",
                    "HTTPMethod":"GET",
                    "URI":"/term/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type SalesTerm searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/term/v2/:realmId/:SalesTermID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "SalesTermID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type SalesTerm using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/term/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "TermQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "SalesTerm",
                "TermQuery"
            ]
        },
        {
            "name":"ShipMethod",
            "Synopsis":"<p>You can use the ShipMethod object to specify a method to ship the goods that are purchased or sold. For example, you can specify a method to ship goods to your customers when you make a sales transaction.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type ShipMethod",
                    "HTTPMethod":"GET",
                    "URI":"/shipmethod/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type ShipMethod searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/shipmethod/v2/:realmId/:ShipMethodID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "ShipMethodID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type ShipMethod using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/shipmethod/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "ShipMethodQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "ShipMethod",
                "ShipMethodQuery"
            ]
        },
        {
            "name":"Status",
            "Synopsis":"<p>The Status object contains information about the sync status of Quickbooks entities.</p><p>You can also query specific entity types for either synchronized or unsynchronized objects with filters. You can get information on recent synchronizations using the SyncActivity API.</p><p><strong>Note:</strong> Sync status information will be maintained for all operations in the cloud up to 30 days old. Of those operations older than 30 days, only the last operation's synch status will be maintained.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve Status",
                    "Synopsis":"This operation retrieve all entities of type Status",
                    "HTTPMethod":"GET",
                    "URI":"/status/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                }
            ],
            "EntityNames":[
                "SyncStatusRequest",
                "SyncStatusResponse"
            ]
        },
        {
            "name":"SyncActivity",
            "Synopsis":"<p>The SyncActivity object contains information about Quickbooks for Windows synchronizations.</p><p>To get the sync status of another type of object, for example, a customer, use the Status API. To filter a query based on whether or not an object is synchronized, use a filter as described in Synchronized Objects</p><p><strong>Note:</strong> Sync status information will be maintained for all operations in the cloud up to 30 days old. Of those operations older than 30 days, only the last operation's synch status will be maintained.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve SyncActivity",
                    "Synopsis":"This operation retrieve all entities of type SyncActivity",
                    "HTTPMethod":"GET",
                    "URI":"/account/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                }
            ],
            "EntityNames":[
                "SyncActivityRequest",
                "SyncActivityResponse"
            ]
        },
        {
            "name":"Task",
            "Synopsis":"<p>A specific task to be completed, maps to a ToDo record in QuickBooks.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Task",
                    "HTTPMethod":"GET",
                    "URI":"/task/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Task searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/task/v2/:TaskID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "TaskID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Task using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/task/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "TaskQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Task",
                "TaskQuery"
            ]
        },
        {
            "name":"TemplateName",
            "Synopsis":"<p>The name of a template used for a specific form presentation.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type TemplateName",
                    "HTTPMethod":"GET",
                    "URI":"/templatename/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type TemplateName searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/templatename/v2/:realmId/:TemplateNameID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "TemplateNameID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type TemplateName using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/templatename/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "TemplateNameQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "TemplateName",
                "TemplateNameQuery"
            ]
        },
        {
            "name":"TimeActivity",
            "Synopsis":"<p>A record of time worked by a vendor or employee. A time activity records the time taken to complete a particular task. Professional service firms can track time for the following reasons:</p><ul><li>To know the tasks of a person and the time spent on various projects, and to use this information for job costing.</li><li>To bill the clients using standard service item rates or custom billing rates.</li><li>To view and quickly access the unbilled time or expenses for a customer.</li><li>To view the number of unbilled hours in the project for each client in reports.</li><li>To use the stopwatch to record the time for a current activity. For example, when you answer a phone call from a client.</li><li>To preview the time records and paychecks of your employees when you pay your employees.</li><li>To pay non-employees (owners, partners, subcontractors, and vendors) for the number of hours they work.</li></ul><h4>Business Rules</h4><br/><p>The TimeActivity object has the following business rules and validations:</p><ul><li>If you modify the time activity records that are more than 5 years old, an error occurs.</li><li>The value of the NameOf element must be Employee or Vendor.</li><li>The value of the BillableStatus element must be Billable or HasBeenBillable. The default value is Billable. </li><li> The default value of the Taxable element is set to True.</li><li> Both the Hours and Minutes elements are either positive or negative.</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type TimeActivity",
                    "HTTPMethod":"POST",
                    "URI":"/timeactivity/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"TimeActivity\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "TimeActivity",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type TimeActivity. <p><strong>Note</strong>: If the error message in the response includes \"no QB ID for TXN_ID generation\", then the sync from QuickBooks desktop was either interrupted by a dropped network connection or by the user cancelling the sync. To fix this problem, the user must run sync again on the desktop.</p>",
                    "HTTPMethod":"POST",
                    "URI":"/timeactivity/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"TimeActivity\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "TimeActivity",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type TimeActivity",
                    "HTTPMethod":"GET",
                    "URI":"/timeactivity/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type TimeActivity searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/timeactivity/v2/:realmId/:TimeActivityID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "TimeActivityID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type TimeActivity using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/timeactivity/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "TimeActivityQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "TimeActivity",
                "TimeActivityQuery"
            ]
        },
        {
            "name":"UOM",
            "Synopsis":"<p>You can use the UOM (Unit of Measure) object to represent data such as quantities, prices, rates, and costs, in units. This object also helps you to convert these units to related units. The UOM type defines the data used to represent a set of equivalent units and the conversion rates to other related units. It allows showing what quantities, prices, rates, and costs are based on.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type UOM",
                    "HTTPMethod":"GET",
                    "URI":"/uom/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type UOM searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/uom/v2/:realmId/:UOMID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "UOMID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type UOM using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/uom/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "UOMQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "UOM",
                "UOMQuery"
            ]
        },
        {
            "name":"Vendor",
            "Synopsis":"<p>You can use the Vendor object to store information about the people and companies you do business with. A vendor is an individual or an organization that provides goods and services to a customer. For example, banks and tax agencies.</p><h4>Business Rules</h4><br/><p>The Vendor object has the following business rules and validations:</p><ul><li>The vendor name must be unique.</li><li>The name, first name, and last name of the vendor must not contain a colon (:).</li><li>The name, first name, or last name field should not be blank.</li><li>The e-mail address of the vendor must contain @ and . (dot).</li></ul>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type Vendor",
                    "HTTPMethod":"POST",
                    "URI":"/vendor/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Vendor\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "Vendor",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Update",
                    "Synopsis":"This operation Updates entity of the type Vendor",
                    "HTTPMethod":"POST",
                    "URI":"/vendor/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Mod xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"Vendor\">~ATTRIBUTES~</Object></Mod>",
                    "RequestBodyEntity": "Vendor",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type Vendor",
                    "HTTPMethod":"GET",
                    "URI":"/vendor/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type Vendor searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/vendor/v2/:realmId/:VendorID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "VendorID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type Vendor using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/vendor/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "VendorQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "Vendor",
                "VendorQuery"
            ]
        },
        {
            "name":"VendorCredit",
            "Synopsis":"<p>VendorCredit is an AP transaction representing a credit from a third party for returned goods or services not rendered. In QuickBooks desktop versions, a vendor credit is also known as a \"bill credit\". That is, it is a credit that a vendor owes you because you overpaid your bill, returned merchandise, or for some other reason. The VendorCredit is not applied until it is referenced in a Bill Payment transaction.</p><p>Note: A VendorCredit should not be confused with a Credit Memo, which is something you owe your customer.</p>",
            "methods":[
                {
                    "MethodName":"Create",
                    "Synopsis":"This operation creates a new entity of the type VendorCredit",
                    "HTTPMethod":"POST",
                    "URI":"/vendorcredit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Add xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object xsi:type=\"VendorCredit\">~ATTRIBUTES~</Object></Add>",
                    "RequestBodyEntity": "VendorCredit",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Delete",
                    "Synopsis":"This operation Updates entity of the type VendorCredit",
                    "HTTPMethod":"POST",
                    "URI":"/vendorcredit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
					"RequestBodyTemplate": "<Del xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ~NAMESPACE~ RequestId=\"\"><ExternalRealmId> </ExternalRealmId><Object type=\"VendorCredit\">~ATTRIBUTES~</Object></Del>",
                    "RequestBodyEntity": "VendorCredit",
                    "RequestBodyExcludeElements": []
                },
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type VendorCredit",
                    "HTTPMethod":"GET",
                    "URI":"/vendorcredit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type VendorCredit searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/vendorcredit/v2/:realmId/:VendorCreditID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "VendorCreditID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type VendorCredit using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/vendorcredit/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "VendorCreditQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "VendorCredit",
                "VendorCreditQuery"
            ]
        },
        {
            "name":"VendorType",
            "Synopsis":"<p>Vendor types allow categorizing vendors in ways that are meaningful to the business. For example, one could set up vendor types so that they indicate a vendor's industry or geographic location. The categorization then can be used for reporting. You can also create a vendor type as a subtype of another vendor type.</p>",
            "methods":[
                {
                    "MethodName":"Retrieve all",
                    "Synopsis":"This operation retrieve all entities of type VendorType",
                    "HTTPMethod":"GET",
                    "URI":"/vendortype/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ]
                },
                {
                    "MethodName":"Retrieve by ID",
                    "Synopsis":"This operation retrieve an entity of type VendorType searched using ID",
                    "HTTPMethod":"GET",
                    "URI":"/vendortype/v2/:realmId/:VendorTypeID",
                    "RequiresOAuth":"Y",
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "VendorTypeID",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        },
                        {
                            "Name": "idDomain",
                            "Required": "Y",
                            "Default": "",
                            "Type": "enumerated",
                            "EnumeratedList": [
                                "NG",
                                "QB"
                            ]
                        }
                    ]
                },
                {
                    "MethodName":"Query Filter",
                    "Synopsis":"This operation retrieves entites of type VendorType using a Query Filter",
                    "HTTPMethod":"POST",
                    "URI":"/vendortype/v2/:realmId",
                    "RequiresOAuth":"Y",
                    "RequiresPostData":"Y",
                    "PopulateRequestBody":"Y",
                    "headers":[
                        {
                            "Name": "content-type",
                            "Default": "text/xml",
                            "Type":"String",
                            "Description":""
                        }
                    ],
                    "parameters":[
                        {
                            "Name": "realmId",
                            "Required": "Y",
                            "Default": "",
                            "Type": "string"
                        }
                    ],
                    "RequestBodyEntity": "VendorTypeQuery",
                    "RequestBodyExcludeElements": []
                }
            ],
            "EntityNames":[
                "VendorType",
                "VendorTypeQuery"
            ]
        }
    ]
}